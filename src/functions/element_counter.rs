////////////////////////////////////////////////////////////////////////////////////////////////////

// hold count upstream & downstream
#[derive(Debug, new)]
struct ElementCounter {
  #[new(default)]
  pub upstream:   i32,
  #[new(default)]
  pub downstream: i32,
}

////////////////////////////////////////////////////////////////////////////////////////////////////

// count on element
impl ElementCounter {
  fn counter(
    &mut self,
    orientation: &str,
  ) {
    if orientation == "upstream" {
      self.upstream += 1;
    } else if orientation == "downstream" {
      self.downstream += 1;
    }
  }
}

////////////////////////////////////////////////////////////////////////////////////////////////////
